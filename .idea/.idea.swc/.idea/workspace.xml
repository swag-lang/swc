<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AIAssistantCustomInstructionsStorage">
    <option name="instructions">
      <map>
        <entry key="AIAssistant.WriteDocumentation.cpp">
          <value>
            <AIAssistantStoredInstruction>
              <option name="actionId" value="AIAssistant.WriteDocumentation.cpp" />
              <option name="content" value="Do not return example code, do not use @author or @version or @since or @file tags.&#10;DO NOT generate example usage.&#10;DO NOT generate usage example.&#10;DO NOT use html tags such as &lt;p&gt;, &lt;lu&gt;, &lt;li&gt;.&#10;DO NOT generate documentation for type member properties.&#10;If end of line comment, make it short, starting with //" />
            </AIAssistantStoredInstruction>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile>swc.vcxproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="dbc16a4a-ed07-41f7-901f-536cda7088df" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.swc/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.swc/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Lexer/Lexer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Lexer/Lexer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Lexer/Token.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Lexer/Token.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Main/swc.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main/swc.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Report/DiagnosticIds.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Report/DiagnosticIds.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Report/DiagnosticIds.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Report/DiagnosticIds.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="cidr-memory-view://468" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Core/Utf8.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Os/Os.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Os/OsWin32.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Report/Assert.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Report/ErrorIds.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Syntax/Tokenizer/Tokenizer.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../swag/src/Syntax/Tokenizer/Tokenizer_StringLiteral.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Core/Utf8.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Core/Utf8.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/LangSpec.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/LangSpec.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/LangSpec.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/Lexer.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/Lexer.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/Lexer.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/Lexer.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/Lexer.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/Lexer.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/SourceCodeLocation.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/SourceCodeLocation.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/SourceFile.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/SourceFile.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Lexer/SourceFile.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/SourceFile.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/Token.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Lexer/Token.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CommandLine.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CommandLine.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CompilerContext.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CompilerContext.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CompilerInstance.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Main/CompilerInstance.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagReporter.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagReporter.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/Diagnostic.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/Diagnostic.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/DiagnosticElement.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/DiagnosticElement.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagnosticElement.h" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagnosticIds.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagnosticIds.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagnosticIds.h" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/DiagnosticIds.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/DiagnosticIds.h" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/Logger.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/Logger.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/UnitTest.cpp" root0="FORCE_HIGHLIGHTING" />
    <setting file="mock://C:/Perso/swag-lang/swc/src/Report/UnitTest.cpp" root0="SKIP_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/Report/UnitTest.h" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/pch.h" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="34Ej2Qb3FY3bjkk9CjPO4uv2O02" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;C/C++ Project.swc.executor&quot;: &quot;Debug&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;com.intellij.ml.llm.matterhorn.ej.ui.settings.DefaultModelSelectionForGA.v1&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.sourceCode.C++&quot;,
    &quot;to.speed.mode.migration.done&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="swc" type="CppProject" factoryName="C++ Project">
      <configuration_1 setup="1">
        <option name="CONFIGURATION" value="Release" />
        <option name="PLATFORM" value="x64" />
        <option name="CURRENT_LAUNCH_PROFILE" value="Local" />
        <option name="EXE_PATH" value="$(LocalDebuggerCommand)" />
        <option name="PROGRAM_PARAMETERS" value="$(LocalDebuggerCommandArguments)" />
        <option name="WORKING_DIRECTORY" value="$(LocalDebuggerWorkingDirectory)" />
        <option name="PASS_PARENT_ENVS" value="1" />
        <option name="USE_EXTERNAL_CONSOLE" value="1" />
        <option name="TERMINAL_INTERACTION_BEHAVIOR" value="AUTO_DETECT" />
        <option name="PROJECT_FILE_PATH" value="$PROJECT_DIR$/swc.vcxproj" />
      </configuration_1>
      <configuration_2 setup="1">
        <option name="CONFIGURATION" value="Debug" />
        <option name="PLATFORM" value="x64" />
        <option name="CURRENT_LAUNCH_PROFILE" value="Local" />
        <option name="EXE_PATH" value="$(LocalDebuggerCommand)" />
        <option name="PROGRAM_PARAMETERS" value="$(LocalDebuggerCommandArguments)" />
        <option name="WORKING_DIRECTORY" value="$(LocalDebuggerWorkingDirectory)" />
        <option name="PASS_PARENT_ENVS" value="1" />
        <option name="USE_EXTERNAL_CONSOLE" value="1" />
        <option name="TERMINAL_INTERACTION_BEHAVIOR" value="AUTO_DETECT" />
        <option name="PROJECT_FILE_PATH" value="$PROJECT_DIR$/swc.vcxproj" />
      </configuration_2>
      <option name="DEFAULT_PROJECT_PATH" value="$PROJECT_DIR$/swc.vcxproj" />
      <option name="PROJECT_FILE_PATH" value="$PROJECT_DIR$/swc.vcxproj" />
      <option name="AUTO_SELECT_PRIORITY" value="0" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="dbc16a4a-ed07-41f7-901f-536cda7088df" name="Changes" comment="" />
      <created>1760785419091</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1760785419091</updated>
      <workItem from="1760785420465" duration="685000" />
      <workItem from="1760798847281" duration="362000" />
      <workItem from="1760799230882" duration="271000" />
      <workItem from="1760799516648" duration="1911000" />
      <workItem from="1760801501480" duration="9485000" />
    </task>
    <task id="LOCAL-00019" summary="Fix `SWAG_ASSERT` condition in `SourceCodeLocation::fromOffset` and reorder member variables for clarity. Update task and configuration in `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760853346584</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1760853346584</updated>
    </task>
    <task id="LOCAL-00020" summary="Refactor diagnostics creation by replacing `Reporter::diagnostic` with `Diagnostic::instance` for improved encapsulation and consistency.">
      <option name="closed" value="true" />
      <created>1760853513730</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1760853513730</updated>
    </task>
    <task id="LOCAL-00021" summary="Replace `Diagnostic::instance` with direct instantiation for improved simplicity and remove unused factory method. Update related `Lexer` and `SourceFile` code for consistency.">
      <option name="closed" value="true" />
      <created>1760853697991</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1760853697991</updated>
    </task>
    <task id="LOCAL-00022" summary="Refactor `Lexer` by introducing token-specific attributes and methods for improved encapsulation. Enhance tokenization logic to support blank spaces, line breaks, and comments effectively. Update related classes (`SourceFile`, `Token`, `SourceCodeLocation`) for consistency.">
      <option name="closed" value="true" />
      <created>1760855112657</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1760855112657</updated>
    </task>
    <task id="LOCAL-00023" summary="Add UTF-8 decoding utility and reorder blank token handling in `Lexer`. Update project files to include new `Utf8` utility.">
      <option name="closed" value="true" />
      <created>1760855492153</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1760855492153</updated>
    </task>
    <task id="LOCAL-00024" summary="Refactor `SourceFile` methods to use `const` references for improved consistency. Integrate UTF-8 decoding in `SourceCodeLocation` column calculation and update project files to include `Utf8` utility.">
      <option name="closed" value="true" />
      <created>1760855828903</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1760855828904</updated>
    </task>
    <task id="LOCAL-00025" summary="Introduce `LangSpec` class and integrate it into `CompilerInstance`. Enhance UTF-8 utility to return structured output and improve tokenization by reordering blank handling logic. Update project and configuration files accordingly.">
      <option name="closed" value="true" />
      <created>1760856491710</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1760856491710</updated>
    </task>
    <task id="LOCAL-00026" summary="Introduce `Flags` and `EnumFlags` templates to encapsulate bitwise operations. Extend `LangSpec` with character flag utilities for `isBlank`, `isDigit`, `isLetter`, and `isAscii` checks. Update `Lexer` to use `LangSpec` for enhanced tokenization. Modify project files to include `Flags.h`.">
      <option name="closed" value="true" />
      <created>1760857066532</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1760857066532</updated>
    </task>
    <task id="LOCAL-00027" summary="Refactor `Lexer::tokenize` to improve buffer safety by adding bounds checking for comments. Update `.idea/workspace.xml` to reflect recent project changes.">
      <option name="closed" value="true" />
      <created>1760857436380</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1760857436380</updated>
    </task>
    <task id="LOCAL-00028" summary="Refactor `LangSpec` and `Lexer` to enhance blank space handling with UTF-8 support. Adjust related methods, types, and tokenization logic. Update project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760858454928</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1760858454928</updated>
    </task>
    <task id="LOCAL-00029" summary="Refactor `Lexer::tokenize` by extracting handling of blank spaces, line breaks, and comments into dedicated methods. Adjust related logic for improved readability and maintainability. Update project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760858927315</created>
      <option name="number" value="00029" />
      <option name="presentableId" value="LOCAL-00029" />
      <option name="project" value="LOCAL" />
      <updated>1760858927315</updated>
    </task>
    <task id="LOCAL-00030" summary="Enhance `Lexer` with string literal parsing support. Detect unclosed strings and invalid EOL within literals. Update diagnostics system and related tokenization logic for improved error handling. Modify project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760859740074</created>
      <option name="number" value="00030" />
      <option name="presentableId" value="LOCAL-00030" />
      <option name="project" value="LOCAL" />
      <updated>1760859740074</updated>
    </task>
    <task id="LOCAL-00031" summary="Refactor `Lexer` parsing methods for enhanced encapsulation and consistency. Introduce instance variables for `Lexer` state, replace method parameters with member accesses, and return `Result` for improved error handling. Update `.idea/workspace.xml` accordingly.">
      <option name="closed" value="true" />
      <created>1760860226035</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1760860226035</updated>
    </task>
    <task id="LOCAL-00032" summary="Enhance `Lexer` with support for raw and multi-line string literals. Add sub-token identifiers for string literal types. Refactor tokenization logic to improve readability and maintainability. Update project files and `.idea/workspace.xml` accordingly.">
      <option name="closed" value="true" />
      <created>1760861203161</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1760861203161</updated>
    </task>
    <task id="LOCAL-00033" summary="Refactor `Lexer` EOL and string literal handling for improved robustness and readability. Add support for collapsing consecutive EOLs, escaping within multi-line strings, and detailed diagnostics for unclosed literals. Update project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760862011087</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1760862011087</updated>
    </task>
    <task id="LOCAL-00034" summary="Refactor `Lexer` to delegate EOL and blank handling to `LangSpec`. Introduce `consumeOneEol` utility for consistent line tracking. Update `.idea/workspace.xml` and project files for related changes.">
      <option name="closed" value="true" />
      <created>1760862644724</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1760862644724</updated>
    </task>
    <task id="LOCAL-00035" summary="Simplify `consumeOneEol` logic in `Lexer` by refactoring EOL handling and consolidating line tracking.">
      <option name="closed" value="true" />
      <created>1760862837871</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1760862837871</updated>
    </task>
    <task id="LOCAL-00036" summary="Add support for hexadecimal and binary number literals in `Lexer`. Introduce `LangSpec` utilities for number parsing and validation, including separator and malformed number diagnostics. Update project files and `.idea/workspace.xml` for related changes.">
      <option name="closed" value="true" />
      <created>1760864849244</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1760864849244</updated>
    </task>
    <task id="LOCAL-00037" summary="Improve diagnostics with enhanced error reporting. Add detailed code line display with marking for errors in `Logger`. Refactor `SourceFile` to include `codeLine` utility to extract specific lines. Update `Lexer` for separator validation and hex digits diagnostics. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760866732341</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1760866732341</updated>
    </task>
    <task id="LOCAL-00038" summary="Introduce `CommandLine` utility to manage configuration options like tab size. Refactor diagnostics system in `Reporter` to improve column calculation and error highlighting with tab expansion. Update `SourceFile`, `SourceCodeLocation`, and dependent modules for compatibility. Adjust project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760867615682</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1760867615682</updated>
    </task>
    <task id="LOCAL-00039" summary="Refactor diagnostics system to simplify error reporting. Replace `report` method in `Reporter` with `report` method in `Diagnostic` for consistent usage. Remove `isEol` utility from `LangSpec` and refactor `Lexer` EOL handling accordingly. Cleanup project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760868145661</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1760868145661</updated>
    </task>
    <task id="LOCAL-00040" summary="Clean up `Lexer` by removing redundant comments and simplifying diagnostic error reporting.">
      <option name="closed" value="true" />
      <created>1760868238706</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1760868238706</updated>
    </task>
    <task id="LOCAL-00041" summary="Simplify `consumeOneEol` in `Lexer` by adding assertion for consistent EOL handling and cleaning up `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760868312149</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1760868312149</updated>
    </task>
    <task id="LOCAL-00042" summary="Refactor `SourceFile` to streamline diagnostic reporting by returning `diag.report(ci)` directly. Integrate related updates to `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760874264662</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1760874264662</updated>
    </task>
    <task id="LOCAL-00043" summary="Refactor `Lexer` to handle file format validation via `checkFormat` method. Move format checking from `SourceFile` to `Lexer` for improved modularity. Update related diagnostics and adjust `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760874666888</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1760874666888</updated>
    </task>
    <task id="LOCAL-00044" summary="Refactor `Lexer` to support comment tokenization with `pushToken` utility and customizable flags. Introduce `LEXER_EXTRACT_COMMENTS_MODE` feature to extract comments independently. Update related diagnostics, `CommandLine`, and `SourceFile`. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760876194558</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1760876194558</updated>
    </task>
    <task id="LOCAL-00045" summary="Introduce `Verifier` class to process diagnostic verification directives from comments. Refactor `SourceFile` to integrate `Verifier`. Update `Lexer` tokenization logic for comment processing. Adjust project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760883986537</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1760883986537</updated>
    </task>
    <task id="LOCAL-00046" summary="Introduce `Utf8` wrapper class for UTF-8 string handling. Refactor `Logger`, `DiagnosticElement`, `Verifier`, `SourceFile`, and related modules to use `Utf8` for improved encoding consistency. Add string trimming utilities to `Utf8`. Update project files and `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760885197618</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1760885197618</updated>
    </task>
    <task id="LOCAL-00047" summary="Refactor `Diagnostic` to introduce `build` method for constructing error messages. Simplify error reporting logic by delegating to `build`. Update `Diagnostic.h`, `SourceFile`, and related modules for consistency. Adjust `.idea/workspace.xml` accordingly.">
      <option name="closed" value="true" />
      <created>1760885503547</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1760885503547</updated>
    </task>
    <task id="LOCAL-00048" summary="Refactor `Lexer` to remove redundant `Result` returns from parsing methods. Replace `Result` with direct `void` returns for improved clarity. Simplify error handling in diagnostics and tokenization logic. Update unit test cases and `.idea/workspace.xml` as needed.">
      <option name="closed" value="true" />
      <created>1760886215170</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1760886215170</updated>
    </task>
    <task id="LOCAL-00049" summary="Refactor `Diagnostic` to include `fileOwner` for contextual error reporting. Replace `Result` returns in `SourceFile` and `Diagnostic` methods with direct `void` alternatives. Simplify diagnostic construction in `Lexer`. Update `.idea/workspace.xml` and related components.">
      <option name="closed" value="true" />
      <created>1760886683246</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1760886683246</updated>
    </task>
    <task id="LOCAL-00050" summary="Introduce `Verifier::verify` method to validate diagnostics against directives in comments. Extend `SourceFile` with `Verifier` accessor and update `Diagnostic` to conditionally suppress logs. Adjust `Lexer` tokenization and update `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760890034420</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1760890034421</updated>
    </task>
    <task id="LOCAL-00051" summary="Remove `Reporter` class and replace with a streamlined `DiagnosticIds` system. Refactor diagnostics handling, integrating `DiagnosticIds` for error messages and identification. Update related modules and adjust `.idea/workspace.xml` and project files accordingly.">
      <option name="closed" value="true" />
      <created>1760891244033</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1760891244033</updated>
    </task>
    <task id="LOCAL-00052" summary="Refactor diagnostics to simplify naming in `DiagnosticIds` and `Diagnostic` usage. Update related modules, including `Lexer` and `Verifier`, to align with streamlined diagnostics handling. Adjust `.idea/workspace.xml` and project files accordingly.">
      <option name="closed" value="true" />
      <created>1760891530046</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1760891530046</updated>
    </task>
    <task id="LOCAL-00053" summary="Update hex literal diagnostics: rename `NumberSepAtEnd` to `NumberSepEnd`, refine error handling in `Lexer`, and enhance unit tests with comprehensive cases for separator validation. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760891899656</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1760891899656</updated>
    </task>
    <task id="LOCAL-00054" summary="Add `Verifier::verify` for unraised directive validation, update diagnostics with `UnRaisedDirective`, and refine project structure. Adjust `.idea/workspace.xml` and related modules.">
      <option name="closed" value="true" />
      <created>1760892356800</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1760892356800</updated>
    </task>
    <task id="LOCAL-00055" summary="Refactor `SourceFile` handling to optimize tabulation replacement and line parsing logic. Use `std::string_view` for efficiency and enhance `Verifier` diagnostics location calculation. Update `.idea/workspace.xml` and related modules.">
      <option name="closed" value="true" />
      <created>1760893268246</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1760893268246</updated>
    </task>
    <task id="LOCAL-00056" summary="Add `NumberSepStart` to diagnostics for invalid leading underscores in numeric literals. Refine error handling in `Lexer` and update related unit tests. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760897724375</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1760897724375</updated>
    </task>
    <task id="LOCAL-00057" summary="Refactor `SourceFile` and `Lexer` for improved encapsulation and consistency. Replace `fullName` with `path` in `SourceFile`, adjust `Lexer` diagnostics handling, and refine `Verifier` logic. Update `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760898085363</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1760898085363</updated>
    </task>
    <task id="LOCAL-00058" summary="Refactor `Lexer` to refine diagnostics handling and improve robustness. Introduce `isValidEscapeSequence`, enhance string literal parsing with detailed error reporting, and extend support for binary and decimal numbers. Update BOM detection in `checkFormat`, streamline logic, and adjust `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760934308617</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1760934308617</updated>
    </task>
    <task id="LOCAL-00059" summary="Remove unused type suffix parsing logic in `Lexer` to simplify tokenization.">
      <option name="closed" value="true" />
      <created>1760934448441</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1760934448441</updated>
    </task>
    <task id="LOCAL-00060" summary="Optimize `Lexer` logic by replacing boundary checks with null terminator validation for improved performance and safety. Streamline token parsing in `.cpp` files and make adjustments in `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760935923489</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1760935923490</updated>
    </task>
    <task id="LOCAL-00061" summary="Refine `Lexer` numeric parsing logic by introducing `MissingExponentDigits` diagnostic for improved error reporting. Enhance handling of number separators with additional checks for validity, consolidate diagnostics, and update unit tests. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760936309997</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1760936309997</updated>
    </task>
    <task id="LOCAL-00062" summary="Refactor `CompilerContext` to centralize `CompilerInstance` usage. Update `Lexer`, `Verifier`, and diagnostics logic to replace direct `CompilerInstance` references with `CompilerContext`. Adjust `.idea/workspace.xml` and project files.">
      <option name="closed" value="true" />
      <created>1760937342571</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1760937342571</updated>
    </task>
    <task id="LOCAL-00063" summary="Refine string literal diagnostics in `Lexer` by adding `StringLiteralEol` error reporting for unclosed strings and invalid trailing backslashes. Update unit tests and adjust `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760941042803</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1760941042803</updated>
    </task>
    <task id="LOCAL-00064" summary="Add unit tests to validate single-line, multi-line, and nested comment parsing in `Lexer`. Cover edge cases, special characters, and mixed comment styles. Update `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760941433589</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1760941433589</updated>
    </task>
    <task id="LOCAL-00065" summary="Add unit tests for binary, decimal, hexadecimal, and string literals in `Lexer`. Validate separators, edge cases, and various formats. Update `.idea/workspace.xml`.">
      <option name="closed" value="true" />
      <created>1760941583521</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1760941583521</updated>
    </task>
    <task id="LOCAL-00066" summary="Remove redundant range operator check in `Lexer` decimal parsing to simplify logic. Update `.idea/workspace.xml` to reflect latest changes.">
      <option name="closed" value="true" />
      <created>1760941896154</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1760941896154</updated>
    </task>
    <task id="LOCAL-00067" summary="Rename `Decimal` to `Integer` in `Lexer` and `Token` for improved clarity. Remove outdated optimization comment in operator parsing logic.">
      <option name="closed" value="true" />
      <created>1760941983694</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1760941983694</updated>
    </task>
    <option name="localTasksCounter" value="68" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Refactor `Lexer` to handle file format validation via `checkFormat` method. Move format checking from `SourceFile` to `Lexer` for improved modularity. Update related diagnostics and adjust `.idea/workspace.xml`." />
    <MESSAGE value="Refactor `Lexer` to support comment tokenization with `pushToken` utility and customizable flags. Introduce `LEXER_EXTRACT_COMMENTS_MODE` feature to extract comments independently. Update related diagnostics, `CommandLine`, and `SourceFile`. Adjust `.idea/workspace.xml` and project files." />
    <MESSAGE value="Introduce `Verifier` class to process diagnostic verification directives from comments. Refactor `SourceFile` to integrate `Verifier`. Update `Lexer` tokenization logic for comment processing. Adjust project files and `.idea/workspace.xml`." />
    <MESSAGE value="Introduce `Utf8` wrapper class for UTF-8 string handling. Refactor `Logger`, `DiagnosticElement`, `Verifier`, `SourceFile`, and related modules to use `Utf8` for improved encoding consistency. Add string trimming utilities to `Utf8`. Update project files and `.idea/workspace.xml`." />
    <MESSAGE value="Refactor `Diagnostic` to introduce `build` method for constructing error messages. Simplify error reporting logic by delegating to `build`. Update `Diagnostic.h`, `SourceFile`, and related modules for consistency. Adjust `.idea/workspace.xml` accordingly." />
    <MESSAGE value="Refactor `Lexer` to remove redundant `Result` returns from parsing methods. Replace `Result` with direct `void` returns for improved clarity. Simplify error handling in diagnostics and tokenization logic. Update unit test cases and `.idea/workspace.xml` as needed." />
    <MESSAGE value="Refactor `Diagnostic` to include `fileOwner` for contextual error reporting. Replace `Result` returns in `SourceFile` and `Diagnostic` methods with direct `void` alternatives. Simplify diagnostic construction in `Lexer`. Update `.idea/workspace.xml` and related components." />
    <MESSAGE value="Introduce `Verifier::verify` method to validate diagnostics against directives in comments. Extend `SourceFile` with `Verifier` accessor and update `Diagnostic` to conditionally suppress logs. Adjust `Lexer` tokenization and update `.idea/workspace.xml`." />
    <MESSAGE value="Remove `Reporter` class and replace with a streamlined `DiagnosticIds` system. Refactor diagnostics handling, integrating `DiagnosticIds` for error messages and identification. Update related modules and adjust `.idea/workspace.xml` and project files accordingly." />
    <MESSAGE value="Refactor diagnostics to simplify naming in `DiagnosticIds` and `Diagnostic` usage. Update related modules, including `Lexer` and `Verifier`, to align with streamlined diagnostics handling. Adjust `.idea/workspace.xml` and project files accordingly." />
    <MESSAGE value="Update hex literal diagnostics: rename `NumberSepAtEnd` to `NumberSepEnd`, refine error handling in `Lexer`, and enhance unit tests with comprehensive cases for separator validation. Adjust `.idea/workspace.xml` and project files." />
    <MESSAGE value="Add `Verifier::verify` for unraised directive validation, update diagnostics with `UnRaisedDirective`, and refine project structure. Adjust `.idea/workspace.xml` and related modules." />
    <MESSAGE value="Refactor `SourceFile` handling to optimize tabulation replacement and line parsing logic. Use `std::string_view` for efficiency and enhance `Verifier` diagnostics location calculation. Update `.idea/workspace.xml` and related modules." />
    <MESSAGE value="Add `NumberSepStart` to diagnostics for invalid leading underscores in numeric literals. Refine error handling in `Lexer` and update related unit tests. Adjust `.idea/workspace.xml` and project files." />
    <MESSAGE value="Refactor `SourceFile` and `Lexer` for improved encapsulation and consistency. Replace `fullName` with `path` in `SourceFile`, adjust `Lexer` diagnostics handling, and refine `Verifier` logic. Update `.idea/workspace.xml` and project files." />
    <MESSAGE value="Refactor `Lexer` to refine diagnostics handling and improve robustness. Introduce `isValidEscapeSequence`, enhance string literal parsing with detailed error reporting, and extend support for binary and decimal numbers. Update BOM detection in `checkFormat`, streamline logic, and adjust `.idea/workspace.xml`." />
    <MESSAGE value="Remove unused type suffix parsing logic in `Lexer` to simplify tokenization." />
    <MESSAGE value="Optimize `Lexer` logic by replacing boundary checks with null terminator validation for improved performance and safety. Streamline token parsing in `.cpp` files and make adjustments in `.idea/workspace.xml`." />
    <MESSAGE value="Refine `Lexer` numeric parsing logic by introducing `MissingExponentDigits` diagnostic for improved error reporting. Enhance handling of number separators with additional checks for validity, consolidate diagnostics, and update unit tests. Adjust `.idea/workspace.xml` and project files." />
    <MESSAGE value="Refactor `CompilerContext` to centralize `CompilerInstance` usage. Update `Lexer`, `Verifier`, and diagnostics logic to replace direct `CompilerInstance` references with `CompilerContext`. Adjust `.idea/workspace.xml` and project files." />
    <MESSAGE value="Refine string literal diagnostics in `Lexer` by adding `StringLiteralEol` error reporting for unclosed strings and invalid trailing backslashes. Update unit tests and adjust `.idea/workspace.xml`." />
    <MESSAGE value="Add unit tests to validate single-line, multi-line, and nested comment parsing in `Lexer`. Cover edge cases, special characters, and mixed comment styles. Update `.idea/workspace.xml`." />
    <MESSAGE value="Add unit tests for binary, decimal, hexadecimal, and string literals in `Lexer`. Validate separators, edge cases, and various formats. Update `.idea/workspace.xml`." />
    <MESSAGE value="Remove redundant range operator check in `Lexer` decimal parsing to simplify logic. Update `.idea/workspace.xml` to reflect latest changes." />
    <MESSAGE value="Rename `Decimal` to `Integer` in `Lexer` and `Token` for improved clarity. Remove outdated optimization comment in operator parsing logic." />
    <option name="LAST_COMMIT_MESSAGE" value="Rename `Decimal` to `Integer` in `Lexer` and `Token` for improved clarity. Remove outdated optimization comment in operator parsing logic." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.OperationCanceledException" breakIfHandledByOtherCode="false" displayValue="System.OperationCanceledException" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.Threading.Tasks.TaskCanceledException" breakIfHandledByOtherCode="false" displayValue="System.Threading.Tasks.TaskCanceledException" />
          <option name="timeStamp" value="2" />
        </breakpoint>
        <breakpoint enabled="true" type="DotNet_Exception_Breakpoints">
          <properties exception="System.Threading.ThreadAbortException" breakIfHandledByOtherCode="false" displayValue="System.Threading.ThreadAbortException" />
          <option name="timeStamp" value="3" />
        </breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/Main/swc.cpp</url>
          <line>43</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/src/Lexer/Lexer.cpp</url>
          <line>1073</line>
          <option name="timeStamp" value="64" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="CppProject">
        <watch expression="tt" language="C++" />
        <watch expression="comment[j]" language="C++" />
        <watch expression="result" />
        <watch expression="expanded" />
        <watch expression="file" language="C++" />
        <watch expression="data" language="C++" />
      </configuration>
    </watches-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>
SWC_TOKEN_DEF(Invalid, "",  Zero)

SWC_TOKEN_DEF(Blank, "",  Trivia)
SWC_TOKEN_DEF(EndOfFile, "",  Trivia)

// Comments
SWC_TOKEN_DEF(CommentLine, "",  Trivia)
SWC_TOKEN_DEF(CommentMultiLine, "",  Trivia)

// String literal
SWC_TOKEN_DEF(StringLine, "",  Literal)
SWC_TOKEN_DEF(StringRaw, "",  Literal)
SWC_TOKEN_DEF(StringMultiLine, "",  Literal)

// Character literal
SWC_TOKEN_DEF(Character, "",  Literal)

// Number literal
SWC_TOKEN_DEF(NumberHexadecimal, "",  Literal)
SWC_TOKEN_DEF(NumberBinary, "",  Literal)
SWC_TOKEN_DEF(NumberInteger, "",  Literal)
SWC_TOKEN_DEF(NumberFloat, "",  Literal)

// Identifier
SWC_TOKEN_DEF(Identifier, "",  Zero)

// Symbols
SWC_TOKEN_DEF(SymQuote, "\"", Symbol)
SWC_TOKEN_DEF(SymBackSlash, "\\", Symbol)
SWC_TOKEN_DEF(SymLeftParen, "(", Symbol)
SWC_TOKEN_DEF(SymRightParen, ")", Symbol)
SWC_TOKEN_DEF(SymLeftBracket, "[", Symbol)
SWC_TOKEN_DEF(SymRightBracket, "]", Symbol)
SWC_TOKEN_DEF(SymLeftCurly, "{", Symbol)
SWC_TOKEN_DEF(SymRightCurly, "}", Symbol)
SWC_TOKEN_DEF(SymSemiColon, ";", Symbol)
SWC_TOKEN_DEF(SymComma, ",", Symbol)
SWC_TOKEN_DEF(SymAt, "@", Symbol)
SWC_TOKEN_DEF(SymQuestion, "?", Symbol)
SWC_TOKEN_DEF(SymTilde, "~", Symbol)
SWC_TOKEN_DEF(SymEqual, "=", Symbol)
SWC_TOKEN_DEF(SymEqualEqual, "==", Symbol)
SWC_TOKEN_DEF(SymEqualGreater, "=>", Symbol)
SWC_TOKEN_DEF(SymColon, ":", Symbol)
SWC_TOKEN_DEF(SymExclamation, "!", Symbol)
SWC_TOKEN_DEF(SymExclamationEqual, "!=", Symbol)
SWC_TOKEN_DEF(SymMinus, "-", Symbol)
SWC_TOKEN_DEF(SymMinusEqual, "-=", Symbol)
SWC_TOKEN_DEF(SymMinusGreater, "->", Symbol)
SWC_TOKEN_DEF(SymMinusMinus, "--", Symbol)
SWC_TOKEN_DEF(SymPlus, "+", Symbol)
SWC_TOKEN_DEF(SymPlusEqual, "+=", Symbol)
SWC_TOKEN_DEF(SymPlusPlus, "++", Symbol)
SWC_TOKEN_DEF(SymAsterisk, "*", Symbol)
SWC_TOKEN_DEF(SymAsteriskEqual, "*=", Symbol)
SWC_TOKEN_DEF(SymSlash, "/", Symbol)
SWC_TOKEN_DEF(SymSlashEqual, "/=", Symbol)
SWC_TOKEN_DEF(SymAmpersand, "&", Symbol)
SWC_TOKEN_DEF(SymAmpersandEqual, "&=", Symbol)
SWC_TOKEN_DEF(SymAmpersandAmpersand, "&&", Symbol)
SWC_TOKEN_DEF(SymVertical, "|", Symbol)
SWC_TOKEN_DEF(SymVerticalEqual, "|=", Symbol)
SWC_TOKEN_DEF(SymVerticalVertical, "||", Symbol)
SWC_TOKEN_DEF(SymCircumflex, "^", Symbol)
SWC_TOKEN_DEF(SymCircumflexEqual, "^=", Symbol)
SWC_TOKEN_DEF(SymPercent, "%", Symbol)
SWC_TOKEN_DEF(SymPercentEqual, "%=", Symbol)
SWC_TOKEN_DEF(SymDot, ".", Symbol)
SWC_TOKEN_DEF(SymDotDot, "..", Symbol)
SWC_TOKEN_DEF(SymDotDotDot, "...", Symbol)
SWC_TOKEN_DEF(SymLower, "<", Symbol)
SWC_TOKEN_DEF(SymLowerEqual, "<=", Symbol)
SWC_TOKEN_DEF(SymLowerEqualGreater, "<=>", Symbol)
SWC_TOKEN_DEF(SymLowerLower, "<<", Symbol)
SWC_TOKEN_DEF(SymLowerLowerEqual, "<<=", Symbol)
SWC_TOKEN_DEF(SymGreater, ">", Symbol)
SWC_TOKEN_DEF(SymGreaterEqual, ">=", Symbol)
SWC_TOKEN_DEF(SymGreaterGreater, ">>", Symbol)
SWC_TOKEN_DEF(SymGreaterGreaterEqual, ">>=", Symbol)

// Control flow
SWC_TOKEN_DEF(KwdIf, "if",  Keyword)
SWC_TOKEN_DEF(KwdElse, "else",  Keyword)
SWC_TOKEN_DEF(KwdElif, "elif",  Keyword)
SWC_TOKEN_DEF(KwdFor, "for",  Keyword)
SWC_TOKEN_DEF(KwdWhile, "while",  Keyword)
SWC_TOKEN_DEF(KwdSwitch, "switch",  Keyword)
SWC_TOKEN_DEF(KwdDefer, "defer",  Keyword)
SWC_TOKEN_DEF(KwdForeach, "foreach",  Keyword)
SWC_TOKEN_DEF(KwdWhere, "where",  Keyword)
SWC_TOKEN_DEF(KwdVerify, "verify",  Keyword)
SWC_TOKEN_DEF(KwdBreak, "break",  Keyword)
SWC_TOKEN_DEF(KwdFallthrough, "fallthrough",  Keyword)
SWC_TOKEN_DEF(KwdUnreachable, "unreachable",  Keyword)
SWC_TOKEN_DEF(KwdReturn, "return",  Keyword)
SWC_TOKEN_DEF(KwdCase, "case",  Keyword)
SWC_TOKEN_DEF(KwdContinue, "continue",  Keyword)
SWC_TOKEN_DEF(KwdDefault, "default",  Keyword)

// Logical keyword ops
SWC_TOKEN_DEF(KwdAnd, "and",  Keyword)
SWC_TOKEN_DEF(KwdOr, "or",  Keyword)
SWC_TOKEN_DEF(KwdOrElse, "orelse",  Keyword)

// Range/iteration
SWC_TOKEN_DEF(KwdTo, "to",  Keyword)
SWC_TOKEN_DEF(KwdUntil, "until",  Keyword)
SWC_TOKEN_DEF(KwdIn, "in",  Keyword)
SWC_TOKEN_DEF(KwdAs, "as",  Keyword)
SWC_TOKEN_DEF(KwdIs, "is",  Keyword)
SWC_TOKEN_DEF(KwdDo, "do",  Keyword)

// Module/error handling
SWC_TOKEN_DEF(KwdUsing, "using",  Keyword)
SWC_TOKEN_DEF(KwdWith, "with",  Keyword)
SWC_TOKEN_DEF(KwdCast, "cast",  Keyword) 
SWC_TOKEN_DEF(KwdDRef, "dref",  Keyword)
SWC_TOKEN_DEF(KwdRetVal, "retval",  Keyword)
SWC_TOKEN_DEF(KwdTry, "try",  Keyword)
SWC_TOKEN_DEF(KwdTryCatch, "trycatch",  Keyword)
SWC_TOKEN_DEF(KwdCatch, "catch",  Keyword)
SWC_TOKEN_DEF(KwdAssume, "assume",  Keyword)
SWC_TOKEN_DEF(KwdThrow, "throw",  Keyword)
SWC_TOKEN_DEF(KwdDiscard, "discard",  Keyword)

// Literals
SWC_TOKEN_DEF(KwdTrue, "true",  Keyword)
SWC_TOKEN_DEF(KwdFalse, "false",  Keyword)
SWC_TOKEN_DEF(KwdNull, "null",  Keyword)
SWC_TOKEN_DEF(KwdUndefined, "undefined",  Keyword)

// Access modifiers
SWC_TOKEN_DEF(KwdPublic, "public",  Keyword)
SWC_TOKEN_DEF(KwdInternal, "internal",  Keyword)
SWC_TOKEN_DEF(KwdPrivate, "private",  Keyword)

// Type definitions
SWC_TOKEN_DEF(KwdEnum, "enum",  Keyword)
SWC_TOKEN_DEF(KwdStruct, "struct",  Keyword)
SWC_TOKEN_DEF(KwdUnion, "union",  Keyword)
SWC_TOKEN_DEF(KwdImpl, "impl",  Keyword)
SWC_TOKEN_DEF(KwdInterface, "interface",  Keyword)
SWC_TOKEN_DEF(KwdFunc, "func",  Keyword)
SWC_TOKEN_DEF(KwdMtd, "mtd",  Keyword)
SWC_TOKEN_DEF(KwdNamespace, "namespace",  Keyword)
SWC_TOKEN_DEF(KwdAlias, "alias",  Keyword) 
SWC_TOKEN_DEF(KwdAttr, "attr",  Keyword)
SWC_TOKEN_DEF(KwdVar, "var",  Keyword)
SWC_TOKEN_DEF(KwdLet, "let",  Keyword)
SWC_TOKEN_DEF(KwdConst, "const",  Keyword)
SWC_TOKEN_DEF(KwdMoveRef, "moveref",  Keyword)

// Reserved
SWC_TOKEN_DEF(KwdNot, "not",  Keyword)

// Compiler directives
SWC_TOKEN_DEF(CompilerGlobal, "#global",  Compiler)
SWC_TOKEN_DEF(CompilerRun, "#run",  Compiler)
SWC_TOKEN_DEF(CompilerAst, "#ast",  Compiler)
SWC_TOKEN_DEF(CompilerFuncTest, "#test",  Compiler)
SWC_TOKEN_DEF(CompilerFuncInit, "#init",  Compiler)
SWC_TOKEN_DEF(CompilerFuncDrop, "#drop",  Compiler)
SWC_TOKEN_DEF(CompilerFuncMain, "#main",  Compiler)
SWC_TOKEN_DEF(CompilerFuncPreMain, "#premain",  Compiler)
SWC_TOKEN_DEF(CompilerFuncMessage, "#message",  Compiler)
SWC_TOKEN_DEF(CompilerDependencies, "#dependencies",  Compiler)
SWC_TOKEN_DEF(CompilerInclude, "#include",  Compiler)
SWC_TOKEN_DEF(CompilerLoad, "#load",  Compiler)
SWC_TOKEN_DEF(CompilerAssert, "#assert",  Compiler)
SWC_TOKEN_DEF(CompilerPrint, "#print",  Compiler)
SWC_TOKEN_DEF(CompilerError, "#error",  Compiler)
SWC_TOKEN_DEF(CompilerWarning, "#warning",  Compiler)
SWC_TOKEN_DEF(CompilerForeignLib, "#foreignlib",  Compiler)
SWC_TOKEN_DEF(CompilerImport, "#import",  Compiler)
SWC_TOKEN_DEF(CompilerInject, "#inject",  Compiler)
SWC_TOKEN_DEF(CompilerMacro, "#macro",  Compiler)
SWC_TOKEN_DEF(CompilerIf, "#if",  Compiler)
SWC_TOKEN_DEF(CompilerElse, "#else",  Compiler)
SWC_TOKEN_DEF(CompilerElseIf, "#elif",  Compiler)
SWC_TOKEN_DEF(CompilerCode, "#code",  Compiler)
SWC_TOKEN_DEF(CompilerScope, "#scope",  Compiler)
SWC_TOKEN_DEF(CompilerUp, "#up",  Compiler)
SWC_TOKEN_DEF(CompilerType, "#type",  Compiler)

// Modifiers
SWC_TOKEN_DEF(ModifierPromote, "#prom",  Modifier)
SWC_TOKEN_DEF(ModifierWrap, "#wrap",  Modifier)
SWC_TOKEN_DEF(ModifierNoDrop, "#nodrop",  Modifier)
SWC_TOKEN_DEF(ModifierMove, "#move",  Modifier)
SWC_TOKEN_DEF(ModifierMoveRaw, "#moveraw",  Modifier)
SWC_TOKEN_DEF(ModifierReverse, "#reverse",  Modifier)
SWC_TOKEN_DEF(ModifierRef, "#ref",  Modifier)
SWC_TOKEN_DEF(ModifierConstRef, "#constref",  Modifier)
SWC_TOKEN_DEF(ModifierNullable, "#null",  Modifier)
SWC_TOKEN_DEF(ModifierErr, "#err",  Modifier)
SWC_TOKEN_DEF(ModifierNoErr, "#noerr",  Modifier)
SWC_TOKEN_DEF(ModifierBit, "#bit",  Modifier)
SWC_TOKEN_DEF(ModifierUnConst, "#unconst",  Modifier)

// Compiler info
SWC_TOKEN_DEF(CompilerBuildCfg, "#cfg",  Compiler)
SWC_TOKEN_DEF(CompilerOs, "#os",  Compiler)
SWC_TOKEN_DEF(CompilerArch, "#arch",  Compiler)
SWC_TOKEN_DEF(CompilerCpu, "#cpu",  Compiler)
SWC_TOKEN_DEF(CompilerBackend, "#backend",  Compiler)
SWC_TOKEN_DEF(CompilerModule, "#module",  Compiler)
SWC_TOKEN_DEF(CompilerFile, "#file",  Compiler)
SWC_TOKEN_DEF(CompilerLine, "#line",  Compiler)
SWC_TOKEN_DEF(CompilerScopeName, "#scopename",  Compiler)
SWC_TOKEN_DEF(CompilerCurLocation, "#curlocation",  Compiler)
SWC_TOKEN_DEF(CompilerCallerLocation, "#callerlocation",  Compiler)
SWC_TOKEN_DEF(CompilerCallerFunction, "#callerfunction",  Compiler)
SWC_TOKEN_DEF(CompilerBuildVersion, "#swagversion",  Compiler)
SWC_TOKEN_DEF(CompilerBuildRevision, "#swagrevision",  Compiler)
SWC_TOKEN_DEF(CompilerBuildNum, "#swagbuildnum",  Compiler)
SWC_TOKEN_DEF(CompilerSwagOs, "#swagos",  Compiler)

// Compiler introspection
SWC_TOKEN_DEF(CompilerDefined, "#defined",  Compiler)
SWC_TOKEN_DEF(CompilerOffsetOf, "#offsetof",  Compiler)
SWC_TOKEN_DEF(CompilerAlignOf, "#alignof",  Compiler)
SWC_TOKEN_DEF(CompilerSizeOf, "#sizeof",  Compiler)
SWC_TOKEN_DEF(CompilerTypeOf, "#typeof",  Compiler)
SWC_TOKEN_DEF(CompilerStringOf, "#stringof",  Compiler)
SWC_TOKEN_DEF(CompilerNameOf, "#nameof",  Compiler)
SWC_TOKEN_DEF(CompilerIsConstExpr, "#isconstexpr",  Compiler)
SWC_TOKEN_DEF(CompilerLocation, "#location",  Compiler)
SWC_TOKEN_DEF(CompilerDeclType, "#decltype",  Compiler)
SWC_TOKEN_DEF(CompilerHasTag, "#hastag",  Compiler)
SWC_TOKEN_DEF(CompilerGetTag, "#gettag",  Compiler)
SWC_TOKEN_DEF(CompilerRunes, "#runes",  Compiler)
SWC_TOKEN_DEF(CompilerSafety, "#safety",  Compiler)

// Intrinsics - string/type
SWC_TOKEN_DEF(IntrinsicStringCmp, "@stringcmp",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicTypeCmp, "@typecmp",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicIs, "@is",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAs, "@as",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicGetContext, "@getcontext",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicSetContext, "@setcontext",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCompiler, "@compiler",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicPrint, "@print",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCompilerError, "@compilererror",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCompilerWarning, "@compilerwarning",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicBcBreakpoint, "@breakpoint",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAssert, "@assert",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicPanic, "@panic",  Intrinsic)

// Intrinsics - lifecycle
SWC_TOKEN_DEF(IntrinsicInit, "@init",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicDrop, "@drop",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicPostMove, "@postmove",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicPostCopy, "@postcopy",  Intrinsic)

// Intrinsics - type info
SWC_TOKEN_DEF(IntrinsicKindOf, "@kindof",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCountOf, "@countof",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicDataOf, "@dataof",  Intrinsic)

// Intrinsics - constructors
SWC_TOKEN_DEF(IntrinsicMakeSlice, "@mkslice",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMakeString, "@mkstring",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMakeAny, "@mkany",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMakeInterface, "@mkinterface",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMakeCallback, "@mkcallback",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicTableOf, "@tableof",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicDbgAlloc, "@dbgalloc",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicSysAlloc, "@sysalloc",  Intrinsic)

// Intrinsics - runtime
SWC_TOKEN_DEF(IntrinsicGetErr, "@err",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicArguments, "@args",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicIsByteCode, "@bytecode",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicIndex, "@index",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicRtFlags, "@rtflags",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicGetProcessInfos, "@pinfos",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicModules, "@modules",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicGvtd, "@gvtd",  Intrinsic)

// Intrinsics - bit operations
SWC_TOKEN_DEF(IntrinsicByteSwap, "@byteswap",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicBitCountNz, "@bitcountnz",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicBitCountTz, "@bitcounttz",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicBitCountLz, "@bitcountlz",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicRol, "@rol",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicRor, "@ror",  Intrinsic)

// Intrinsics - math
SWC_TOKEN_DEF(IntrinsicMin, "@min",  Intrinsic) 
SWC_TOKEN_DEF(IntrinsicMax, "@max",  Intrinsic) 
SWC_TOKEN_DEF(IntrinsicSqrt, "@sqrt",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicSin, "@sin",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCos, "@cos",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicTan, "@tan",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicSinh, "@sinh",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCosh, "@cosh",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicTanh, "@tanh",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicASin, "@asin",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicACos, "@acos",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicATan, "@atan",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicATan2, "@atan2",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicLog, "@log",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicLog2, "@log2",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicLog10, "@log10",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicFloor, "@floor",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCeil, "@ceil",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicTrunc, "@trunc",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicRound, "@round",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAbs, "@abs",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicExp, "@exp",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicExp2, "@exp2",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicPow, "@pow",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMulAdd, "@muladd",  Intrinsic)

// Intrinsics - memory
SWC_TOKEN_DEF(IntrinsicAlloc, "@alloc",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicRealloc, "@realloc",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicFree, "@free",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMemCpy, "@memcpy",  Intrinsic) 
SWC_TOKEN_DEF(IntrinsicMemMove, "@memmove",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMemSet, "@memset",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicMemCmp, "@memcmp",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicStrLen, "@strlen",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicStrCmp, "@strcmp",  Intrinsic)

// Intrinsics - atomic
SWC_TOKEN_DEF(IntrinsicAtomicAdd, "@atomadd",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAtomicAnd, "@atomand",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAtomicOr, "@atomor",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAtomicXor, "@atomxor",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAtomicXchg, "@atomxchg",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicAtomicCmpXchg, "@atomcmpxchg",  Intrinsic)

// Intrinsics - varargs
SWC_TOKEN_DEF(IntrinsicCVaStart, "@cvastart",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCVaEnd, "@cvaend",  Intrinsic)
SWC_TOKEN_DEF(IntrinsicCVaArg, "@cvaarg",  Intrinsic)

// Native types
SWC_TOKEN_DEF(TypeAny, "any",  Type)
SWC_TOKEN_DEF(TypeVoid, "void",  Type)
SWC_TOKEN_DEF(TypeRune, "rune",  Type)
SWC_TOKEN_DEF(TypeF32, "f32",  Type)
SWC_TOKEN_DEF(TypeF64, "f64",  Type)
SWC_TOKEN_DEF(TypeS8, "s8",  Type)
SWC_TOKEN_DEF(TypeS16, "s16",  Type)
SWC_TOKEN_DEF(TypeS32, "s32",  Type)
SWC_TOKEN_DEF(TypeS64, "s64",  Type)
SWC_TOKEN_DEF(TypeU8, "u8",  Type)
SWC_TOKEN_DEF(TypeU16, "u16",  Type)
SWC_TOKEN_DEF(TypeU32, "u32",  Type)
SWC_TOKEN_DEF(TypeU64, "u64",  Type)
SWC_TOKEN_DEF(TypeBool, "bool",  Type)
SWC_TOKEN_DEF(TypeString, "string",  Type)
SWC_TOKEN_DEF(TypeCString, "cstring",  Type)
SWC_TOKEN_DEF(TypeTypeInfo, "typeinfo",  Type)
SWC_TOKEN_DEF(TypeCVarArgs, "cvarargs",  Type)
